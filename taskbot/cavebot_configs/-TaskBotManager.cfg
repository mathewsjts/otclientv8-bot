label:start
function:[[
-- set targetbot
TargetBot.setCurrentProfile("-TaskBotManager")
TargetBot.setOn()
return true
]]
function:[[
-- set fight mode
g_game.setFightMode(3)
return true
]]
function:[[
-- reopen backpacks
reopenBackpacks()
return true
]]
function:[[
-- check rookgaard
local position = pos()
local outOfHorizontal = position.x < 32010 or position.x > 32120
local outOfVertical = position.y < 32190 or position.y > 32230
if outOfHorizontal or outOfVertical then
	gotoLabel("main-land")
end
return true
]]
goto:32097,32204,7
label:rookgaard
function:[[
-- set profile rookgaard
TaskBot.loadConfig("Rookgaard")
return true
]]
label:main-land
function:[[
-- check task
if TaskBot.taskCurrent and not TaskBot.isTaskCompleted(TaskBot.taskCurrent) then
	gotoLabel("go-task")
end
return true
]]
label:check-is-aurora
poscheck:check-is-ph,5,5645,5605,7
gotolabel:go-ph
use:16277
delay:1000
goto:32210,32297,6,0
npctalk:Charos,yes,port hope
goto:32210,32294,6
goto:32210,32292,6,0
goto:32594,32744,7
goto:32592,32741,7
changefloor:up,false,32592,32740,7
goto:32595,32744,6
goto:32595,32749,6,0
npcsay:!vial
poscheck:go-ph,10,32594,32745,7
label:check-is-ph
function:[[
-- check equipments
if getRight():getId() ~= 3425 then
	gotoLabel("get-equipments")
end
return true
]]
gotolabel:go-task
label:get-equipments
goto:32624,32750,7
goto:32625,32749,7,0
goto:32630,32742,6
changefloor:up,false,32630,32742,6
goto:32632,32740,5,0
buyitem:Perod,3457,1
goto:32630,32742,5,0
goto:32632,32746,6,0
function:[[
-- unequip set
local delayMS = 800
local items = {
	getHead(),
	getBody(),
	getLeg(),
	getRight(),
	getFinger(),
	getAmmo()
}
for index, item in pairs(items) do
	if item ~= nil then
		schedule(
			index * delayMS,
			function() g_game.move(item, {x=32635,y=32743,z=6}) end
		)
	end
end
delay((#items + 4) * delayMS)
return true
]]
buyitem:Brengus,3359,1
buyitem:Brengus,3372,1
buyitem:Brengus,3375,1
buyitem:Brengus,3425,1
function:[[
openPurse()
delay(800)
return true
]]
function:[[
-- unequip items for maker
local delayMS = 800
local items = {
	getHead(),
	getBody(),
	getFeet(),
	getLeft(),
	getRight(),
}
for index, item in pairs(items) do
	if item ~= nil then
		schedule(
			index * delayMS,
			function() g_game.move(item, {x=65535, y=SlotBack, z=0}) end
		)
	end
end
delay((#items + 2) * delayMS)
return true
]]
function:[[
-- use makers
local delayMS = 3000
local sourceItemId = 32901
local targetItemIds = {3375, 3359, 3552, 3074, 3425}
if itemAmount(sourceItemId) == 0 then
	return true
end
for index, itemId in pairs(targetItemIds) do
	schedule(
		index * delayMS,
		function() g_game.useWith(findItem(sourceItemId), findItem(itemId)) end
	)
end
delay((#targetItemIds + 2) * delayMS)
return "retry"
]]
function:[[
-- equip items
local delayMS = 200
local hasShield = getRight() and getRight():getId() == 3425
local hasWand = getLeft() and getLeft():getId() == 3074
local hasArmor = getBody() and getBody():getId() == 3359
if hasArmor and hasShield and hasWand then
	return true
end
local equipItems = {
	{id=3375,slot=SlotHead},
	{id=3359,slot=SlotBody},
	{id=3552,slot=SlotFeet},
	{id=3425,slot=SlotRight},
	{id=3074,slot=SlotLeft},
}
for index, item in pairs(equipItems) do
	schedule(
		index * delayMS,
		function() g_game.move(findItem(item.id), {x=65535, y=item.slot, z=0}) end
	)
end
delay((#equipItems + 2) * delayMS)
return "retry"
]]
goto:32625,32749,6,0
label:go-tasker
goto:32625,32749,6,0
goto:32618,32770,7
changefloor:up,false,32618,32771,7
goto:32623,32773,6
goto:32629,32779,6
goto:32629,32785,6,0
goto:32640,32785,7
goto:32656,32787,7
goto:32679,32784,7
goto:32691,32777,7
goto:32694,32772,7,0
goto:32694,32768,6,0
label:in-tasker
function:return TaskBot.joinGrizzlyQuest()
function:return TaskBot.reportTask()
function:return TaskBot.requestTasks(TaskBot.getNextTasks())
goto:32694,32768,6
goto:32694,32772,6,0
goto:32677,32778,7,0
goto:32677,32778,7,0
label:go-task
function:[[
if TaskBot.taskCurrent and TaskBot.isTaskCompleted(TaskBot.taskCurrent) then
	gotoLabel("go-tasker")
	return true
end
TaskBot.getCurrentTask()
if TaskBot.isTaskCompleted(TaskBot.taskCurrent) then
	gotoLabel("go-tasker")
	return true
end
if not TaskBot.taskCurrent and #TaskBot.getNextTasks() > 0 then
	gotoLabel("go-tasker")
	return true
end
if not TaskBot.taskCurrent and #TaskBot.getNextTasks() == 0 then
	gotoLabel("finish")
	return true
end
TaskBot.loadConfig(TaskBot.taskCurrent)
return true
]]
label:finish
teleportcity:krailos
teleportcity:port hope
goto:32629,32749,7,0
goto:32632,32739,6,0
bank:deposit,Ferks
delay:1000
bank:transfer,Ferks,Maynard,0
goto:32625,32749,6,0
goto:32619,32750,7
goto:32614,32744,7
goto:32608,32744,7
goto:32606,32750,7
goto:32600,32751,7
goto:32595,32745,7
goto:32595,32745,7
poscheck:finish,10,32595,32745,7
use:16277
delay:1000
goto:32208,32297,6
goto:32204,32299,6,0
goto:32204,32293,7
function:[[
-- set auto-reconnect
if TaskBot.hasUnsetedCharacter() then
	TaskBot.setAutoReconnectOn()
	TaskBot.selectUnsetedCharacter()
else
	TaskBot.setAutoReconnectOff()
end
return true
]]
use:32204,32292,7
function:[[
-- set cavebot off
CaveBot.setOff()
return true
]]
config:{"ping":100,"walkDelay":10,"useDelay":400,"ignoreFields":true,"mapClickDelay":100,"mapClick":false,"skipBlocked":false}
